# Pipeline with AWS CodeCommit

# Trigger on all branches
trigger:
  tags:
    include:
    - 'v*'
  branches:
    include:
    - 'main'

stages:
  # DEV Stage
  - stage:
    displayName: DEV
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    jobs:
      - deployment:
        displayName: Deploy DEV
        environment: DEV Amplify
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: |
                    sudo apt-get install gridsite-clients
                    git checkout main
                    git push -f https://${AWS_GIT_USERNAME}:$(urlencode ${AWS_GIT_PASSWORD})@${AWS_REPO_URL}
                  displayName: 'Sync repository with AWS CodeCommit'
                  env:
                    AWS_REPO_URL: $(AWS_REPO_URL)
                    AWS_GIT_USERNAME: $(AWS_GIT_USERNAME)
                    AWS_GIT_PASSWORD: $(AWS_GIT_PASSWORD)

  # UAT Stage
  - stage:
    displayName: UAT
    dependsOn:
    condition: contains(variables['Build.SourceBranch'], 'refs/tags/v')
    jobs:
      - deployment:
        displayName: Deploy UAT
        environment: UAT Amplify
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: |
                    sudo apt-get install gridsite-clients
                    git checkout main
                    git reset --hard $(Build.SourceBranch)
                    git push -f https://${AWS_GIT_USERNAME_UAT}:$(urlencode ${AWS_GIT_PASSWORD_UAT})@${AWS_REPO_URL_UAT}
                  displayName: 'Sync repository with AWS CodeCommit'
                  env:
                    AWS_REPO_URL_UAT: $(AWS_REPO_URL_UAT)
                    AWS_GIT_USERNAME_UAT: $(AWS_GIT_USERNAME_UAT)
                    AWS_GIT_PASSWORD_UAT: $(AWS_GIT_PASSWORD_UAT)
  # PROD Stage
  - stage:
    displayName: PROD
    dependsOn:
    condition: and(contains(variables['Build.Reason'], 'Manual'), contains(variables['Build.SourceBranch'], 'refs/tags/v'))
    jobs:
      - deployment:
        displayName: Deploy PROD
        environment: PROD Amplify
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: |
                    echo ${AWS_GIT_USERNAME_PROD}
                    echo $(urlencode ${AWS_GIT_PASSWORD_PROD})
                    echo ${AWS_REPO_URL_PROD}

                    sudo apt-get install gridsite-clients
                    git checkout main
                    git reset --hard $(Build.SourceBranch)
                    git push -f https://${AWS_GIT_USERNAME_PROD}:$(urlencode ${AWS_GIT_PASSWORD_PROD})@${AWS_REPO_URL_PROD}
                  displayName: 'Sync repository with AWS CodeCommit'
                  env:
                    AWS_REPO_URL_PROD: $(AWS_REPO_URL_PROD)
                    AWS_GIT_USERNAME_PROD: $(AWS_GIT_USERNAME_PROD)
                    AWS_GIT_PASSWORD_PROD: $(AWS_GIT_PASSWORD_PROD)